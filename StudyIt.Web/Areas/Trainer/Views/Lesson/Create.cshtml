@model StudyIt.Web.ViewModels.TrainerLessonCreateViewModel

@{
    ViewBag.Title = "Създай урок";
}

<h2>Създай урок</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Урок</legend>

        <div class="editor-label">
            Групи
        </div>
        <div class="editor-field">
            @Html.DropDownList("groupSelect", Model.Groups, "Избери група", htmlAttributes: new { @class = "chained-select" })
        </div>

        <div class="editor-label">
            Категории
        </div>
        <div class="editor-field">
            <select class="chained-select" id="categorySelect">
                <option data-id="none">Избери категория</option>
            </select>
        </div>

        <div class="editor-label">
            Подкатегории
        </div>
        <div class="editor-field">
            <select class="chained-select" name="SubcategoryId">
                <option data-id="none">Избери подкатегория</option>
            </select>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Content)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Content)
            @Html.ValidationMessageFor(model => model.Content)
        </div>

        <p>
            <input type="submit" value="Създай" />
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/Scripts/LessonTextEditor.js")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/SubcategoryChainedSelect.js")
}
